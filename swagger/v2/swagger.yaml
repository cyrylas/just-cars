{
  "swagger": "2.0",
  "info": {
    "title": "API V2",
    "version": "v2"
  },
  "paths": {
    "/api/v2/auth": {
      "post": {
        "summary": "Get token",
        "tags": [
          "Auth"
        ],
        "security": [

        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Valid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "exp": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "$ref": "#/components/schemas/user"
                }
              },
              "required": [
                "token",
                "exp",
                "user"
              ]
            }
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/v2/auth/refresh": {
      "post": {
        "summary": "refresh token",
        "tags": [
          "Auth"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Enter: Bearer {token}"
          }
        ],
        "responses": {
          "201": {
            "description": "Valid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "exp": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "$ref": "#/components/schemas/user"
                }
              },
              "required": [
                "token",
                "exp",
                "user"
              ]
            }
          },
          "401": {
            "description": "Invalid current token"
          }
        }
      }
    },
    "/api/v2/offers": {
      "get": {
        "summary": "List all offers",
        "tags": [
          "Offers"
        ],
        "security": [

        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Number of offers to display. Default: 50"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Number of offers to skip. Default: 0"
          },
          {
            "name": "min_price",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "Minimum price (inclusive)"
          },
          {
            "name": "max_price",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "Maximum price (inclusive)"
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Exact query string to look for in title and descrition"
          }
        ],
        "responses": {
          "200": {
            "description": "Offers list",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/offer"
                  }
                },
                "has_next_page": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates an offer",
        "tags": [
          "Offers"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "offer[title]",
            "in": "formData",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Offer title to display"
          },
          {
            "name": "offer[description]",
            "in": "formData",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Offer description"
          },
          {
            "name": "offer[price]",
            "in": "formData",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "Offer price, eg: 123.45"
          },
          {
            "name": "offer[picture]",
            "in": "formData",
            "type": "file",
            "required": false,
            "description": "Image that should be displayed with offer"
          }
        ],
        "responses": {
          "201": {
            "description": "offer created"
          }
        }
      }
    },
    "/api/v2/offers/{id}": {
      "get": {
        "summary": "Retrieves offer details",
        "tags": [
          "Offers"
        ],
        "security": [

        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Offer details",
            "schema": {
              "$ref": "#/components/schemas/offer"
            }
          }
        }
      },
      "patch": {
        "summary": "Update offer",
        "tags": [
          "Offers"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true
          },
          {
            "name": "offer[title]",
            "in": "formData",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Offer title to display"
          },
          {
            "name": "offer[description]",
            "in": "formData",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Offer description"
          },
          {
            "name": "offer[price]",
            "in": "formData",
            "schema": {
              "type": "number"
            },
            "required": false,
            "description": "Offer price, eg: 123.45"
          },
          {
            "name": "offer[picture]",
            "in": "formData",
            "type": "file",
            "required": false,
            "description": "Image that should be displayed with offer"
          }
        ],
        "responses": {
          "200": {
            "description": "brand updated"
          },
          "422": {
            "description": "invalid request"
          }
        }
      },
      "delete": {
        "summary": "Delete offer",
        "tags": [
          "Offers"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "number",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "offer deleted"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "security": [
    {
      "bearerAuth": [

      ]
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "offer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "picture": {
            "type": "object",
            "nullable": true,
            "properties": {
              "thumb": {
                "type": "string"
              },
              "original": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "datetime"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "datetime"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime"
          }
        }
      }
    }
  }
}